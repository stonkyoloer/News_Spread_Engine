"""
FILTER 4: Final Selection - Top 22
400 stocks → 22 stocks
Select by IV rank and diversification
"""
import json
import sys
import os
from datetime import datetime

sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def select_top_22():
    """Select final 22 stocks"""
    print("="*60)
    print("FILTER 4: Final Selection")
    print("="*60)
    
    # Load Filter 3 results
    with open("data/filter3_results.json", "r") as f:
        data = json.load(f)
        stocks = data["passed_stocks"]
    
    print(f"Input: {len(stocks)} stocks from Filter 3")
    print("Criteria: High IV, liquid options, diversified\n")
    
    # Score each stock
    for stock in stocks:
        score = 0
        
        # IV score (0-40 points)
        iv_pct = stock.get('iv_pct', 25)
        if iv_pct >= 40:
            score += 40
        elif iv_pct >= 30:
            score += 30
        elif iv_pct >= 25:
            score += 20
        else:
            score += 10
        
        # Strikes score (0-30 points)
        strikes = stock.get('strikes_count', 20)
        if strikes >= 100:
            score += 30
        elif strikes >= 60:
            score += 20
        else:
            score += 10
        
        # Weekly options (0-20 points)
        expirations = stock.get('expirations', 1)
        if expirations >= 4:
            score += 20
        elif expirations >= 2:
            score += 10
        
        # Spread tightness (0-10 points)
        spread_pct = stock.get('spread_pct', 0.5)
        if spread_pct < 0.05:
            score += 10
        elif spread_pct < 0.1:
            score += 5
        
        stock['selection_score'] = score
    
    # Sort by score
    stocks.sort(key=lambda x: x['selection_score'], reverse=True)
    
    # Select top 22
    selected = stocks[:22]
    
    return selected

def create_stocks_py(selected):
    """Create stocks.py file"""
    tickers = [s['ticker'] for s in selected]
    
    edge_reasons = {}
    for s in selected:
        iv = s.get('iv_pct', 25)
        strikes = s.get('strikes_count', 20)
        edge_reasons[s['ticker']] = f"IV {iv:.0f}%, {strikes} strikes, score {s['selection_score']}"
    
    with open("data/stocks.py", "w") as f:
        f.write(f"# Generated by Filter Pipeline: {datetime.now()}\n")
        f.write(f"# Top 22 from S&P 500 filtering\n\n")
        f.write(f"STOCKS = {tickers}\n\n")
        f.write("EDGE_REASON = {\n")
        for ticker, reason in edge_reasons.items():
            f.write(f'    "{ticker}": "{reason}",\n')
        f.write("}\n")

def save_final_selection(selected):
    """Save final results"""
    output = {
        'timestamp': datetime.now().isoformat(),
        'filter': 'Final Selection',
        'input_count': 400,
        'output_count': len(selected),
        'final_22': selected
    }
    
    with open('data/final_22.json', 'w') as f:
        json.dump(output, f, indent=2)
    
    print(f"{'='*60}")
    print(f"FINAL 22 SELECTED:")
    print(f"{'='*60}")
    
    for i, stock in enumerate(selected, 1):
        print(f"{i:2}. {stock['ticker']:5} - IV: {stock.get('iv_pct', 0):5.1f}%, "
              f"Score: {stock['selection_score']:3}, "
              f"Strikes: {stock.get('strikes_count', 0):3}")

def main():
    selected = select_top_22()
    create_stocks_py(selected)
    save_final_selection(selected)
    
    print(f"\n✅ Complete! 22 stocks selected")
    print(f"📁 Saved to data/stocks.py")
    print(f"🚀 Ready to run main pipeline")

if __name__ == "__main__":
    main()
